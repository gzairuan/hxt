package com.hinear.hxt.servlet.notice;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.hinear.hxt.entity.NoticeInfo;
import com.hinear.hxt.entity.TeacherGroup;
import com.hinear.hxt.util.HttpUtils;
import com.hinear.hxt.util.JSONUtil;
import com.hinear.hxt.util.TransformUtils;

/**
 * 新增通知数据
 */
@WebServlet("/addNoticeServlet")
public class AddServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * 参数 title标题 content内容 typeid类型id {@link NoticeInfo#TYPE_CLASS}
	 * 教师通知需teacherGroupIds教师组id集合 班级通知需cid班级id
	 * 
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		HttpSession session = request.getSession();
		Object sid = (int) session.getAttribute("sid");
		Object userId = session.getAttribute("userId");
		if (sid != null && userId != null) {
			// 获取request 请求的params
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			int typeid = TransformUtils.transformInt(request.getParameter("typeId"));
			if (typeid == 0) {
				System.out.println("typeid参数必须设置");
				return;
			}
			NoticeInfo noticeInfo = new NoticeInfo();
			noticeInfo.setTYPEID(typeid);
			noticeInfo.setUSERID((int) userId);
			noticeInfo.setRECEIVESCHOOL((int) sid);
			noticeInfo.setNEWSTITLE(title);
			noticeInfo.setCONTENT(content);
			String serverType;
			if (NoticeInfo.TYPE_TEACHER == typeid) {
				serverType = "07B";
				String[] teacherGroupIds = request.getParameterValues("teacherGroupIds");
				if (teacherGroupIds != null && teacherGroupIds.length != 0) {
					List<TeacherGroup> noticegroup = new ArrayList<>();
					for (String tgId : teacherGroupIds) {
						TeacherGroup tGroup = new TeacherGroup();
						tGroup.setGroup_id(Integer.parseInt(tgId));
						noticegroup.add(tGroup);
					}
					noticeInfo.setNoticegroup(noticegroup);
				}
			} else {
				serverType = "06A";
				if (NoticeInfo.TYPE_CLASS == typeid) {
					// String cid = request.getParameter("cid");
					// noticeInfo.setRECEIVECLASSES(Integer.parseInt(cid));
				}
			}

			String noticeJson = JSONUtil.toJSON(noticeInfo);
			Map<String, String> params = new HashMap<>();
			params.put("Notices", noticeJson);
			String result = HttpUtils.getInstance().get(serverType, params);
			PrintWriter pw = response.getWriter();
			pw.write(result);
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doGet(request, response);
	}

}
